[{"C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\index.js":"1","C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\App.js":"2","C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\reportWebVitals.js":"3","C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\aws-exports.js":"4"},{"size":599,"mtime":1607685026672,"results":"5","hashOfConfig":"6"},{"size":4335,"mtime":1607684699946,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":469,"mtime":1607684970730,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ccpjw8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\index.js",[],["20","21"],"C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\App.js",["22"],"/*eslint no-fallthrough: [\"error\", { \"commentPattern\": \"break[\\\\s\\\\w]*omitted\" }]*/\n\nimport React, { useState, useEffect } from 'react'\nimport { Auth, Hub } from 'aws-amplify'\n\nconst initialFormState = {\n  username: '',\n  password: '',\n  email: '',\n  authCode: '',\n  formType: 'signUp',\n}\nfunction App() {\n  const [formState, updateFormState] = useState(initialFormState)\n  const [user, updateUser] = useState(null)\n  const onChange = (e) => {\n    e.persist()\n    updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\n  }\n\n  const { formType } = formState\n\n  useEffect(() => {\n    checkUser()\n    setAuthListener()\n  }, [])\n\n  async function setAuthListener() {\n    Hub.listen('auth', ({ payload: { event, data } }) => {\n      switch (event) {\n        case 'signIn':\n        case 'cognitoHostedUI':\n          checkUser()\n          break\n        case 'signOut':\n          updateFormState(() => ({ ...formState, formType: 'signIn' }))\n          updateUser(null)\n          break\n        case 'signIn_failure':\n        case 'cognitoHostedUI_failure':\n          console.log('Sign in failure', data)\n          break\n        default:\n          return\n      }\n    })\n  }\n\n  async function checkUser() {\n    try {\n      const user = await Auth.currentAuthenticatedUser()\n      updateUser(user)\n      console.log('user', user)\n      updateFormState(() => ({ ...formState, formType: 'signedIn' }))\n    } catch (error) {\n      //updateUser(null)\n    }\n  }\n  async function signUp() {\n    const { username, email, password } = formState\n    await Auth.signUp({ username, password, attributes: { email } })\n    updateFormState(() => ({ ...formState, formType: 'confirmSignUp' }))\n  }\n  async function confirmSignUp() {\n    const { username, authCode } = formState\n    await Auth.confirmSignUp(username, authCode)\n    updateFormState(() => ({ ...formState, formType: 'signIn' }))\n  }\n  async function signIn() {\n    const { username, password } = formState\n    await Auth.signIn({ username, password })\n    const tempUser = await Auth.currentAuthenticatedUser()\n    updateUser(tempUser)\n    updateFormState(() => ({ ...formState, formType: 'signedIn' }))\n  }\n\n  return (\n    <div>\n      {formType === 'signUp' && (\n        <div>\n          <input name='username' onChange={onChange} placeholder='username' />\n          <input\n            name='password'\n            type='password'\n            onChange={onChange}\n            placeholder='password'\n          />\n          <input\n            name='email'\n            type='email'\n            onChange={onChange}\n            placeholder='email'\n          />\n          <button onClick={signUp}>Sign Up</button>\n          <button\n            onClick={() =>\n              updateFormState(() => ({\n                ...formState,\n                formType: 'signIn',\n              }))\n            }\n          >\n            Back to Sign In\n          </button>\n          <button\n            onClick={() => Auth.federatedSignIn({ provider: 'Facebook' })}\n          >\n            Open Facebook\n          </button>\n        </div>\n      )}\n      {formType === 'confirmSignUp' && (\n        <div>\n          <input name='authCode' onChange={onChange} placeholder='authCode' />\n\n          <button onClick={confirmSignUp}>Confirm Sign Up</button>\n        </div>\n      )}\n      {formType === 'signIn' && (\n        <div>\n          <input name='username' onChange={onChange} placeholder='username' />\n          <input\n            name='password'\n            type='password'\n            onChange={onChange}\n            placeholder='password'\n          />\n\n          <button onClick={signIn}>Sign In</button>\n          <button\n            onClick={() =>\n              updateFormState(() => ({\n                ...formState,\n                formType: 'signUp',\n              }))\n            }\n          >\n            Sign Up\n          </button>\n          <button\n            onClick={() => Auth.federatedSignIn({ provider: 'Facebook' })}\n          >\n            Open Facebook\n          </button>\n        </div>\n      )}\n      {formType === 'signedIn' && (\n        <div>\n          Hello {user.username}\n          <button\n            onClick={() => {\n              Auth.signOut()\n            }}\n          >\n            Sign Out\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\reportWebVitals.js",[],"C:\\Users\\canberk\\Desktop\\Docs\\Cognito\\training-cognito\\src\\aws-exports.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":26,"column":6,"nodeType":"29","endLine":26,"endColumn":8,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUser' and 'setAuthListener'. Either include them or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [checkUser, setAuthListener]",{"range":"36","text":"37"},[641,643],"[checkUser, setAuthListener]"]